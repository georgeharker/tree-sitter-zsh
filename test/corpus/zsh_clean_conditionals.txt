================================================================================
Simple test command
================================================================================

[[ -f file ]]

--------------------------------------------------------------------------------

(program
  (test_command
    (unary_expression
      operator: (test_operator)
      (word))))

================================================================================
Binary test with -eq
================================================================================

[[ $a -eq $b ]]

--------------------------------------------------------------------------------

(program
  (test_command
    (binary_expression
      left: (variable_ref
        (simple_variable_name))
      operator: (test_operator)
      right: (variable_ref
        (simple_variable_name)))))

================================================================================
String comparison
================================================================================

[[ "$str" == "test" ]]

--------------------------------------------------------------------------------

(program
  (test_command
    (binary_expression
      left: (string
        (variable_ref
          (simple_variable_name)))
      right: (string
        (string_content)))))

================================================================================
File test with negation
================================================================================

[[ ! -f file ]]

--------------------------------------------------------------------------------

(program
  (test_command
    (unary_expression
      (unary_expression
        operator: (test_operator)
        (word)))))

================================================================================
Complex conditional
================================================================================

[[ -f file && -r file ]]

--------------------------------------------------------------------------------

(program
  (test_command
    (binary_expression
      left: (unary_expression
        operator: (test_operator)
        (word))
      right: (unary_expression
        operator: (test_operator)
        (word)))))
